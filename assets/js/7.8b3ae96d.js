(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{227:function(t,a,v){"use strict";v.r(a);var _=v(28),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"编译型-解释型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#编译型-解释型"}},[t._v("#")]),t._v(" 编译型, 解释型")]),t._v(" "),v("p",[t._v("按执行的方式分为两种, 编译和解释, 目的就是把源代码转换成计算机可以执行的代码 "),v("br")]),t._v(" "),v("ul",[v("li",[t._v("源代码: 采用某种编程语言编写的代码, 人方便阅读的\n"),v("ul",[v("li",[t._v("高级语言:  一些英文组成的代码, 如C, Java等")]),t._v(" "),v("li",[t._v("汇编语言:  单词或字母来代替某些指令的命令, 不太好理解")]),t._v(" "),v("li",[t._v("机器语言:  指的0和1的数字组合")])])]),t._v(" "),v("li",[t._v("目标代码: 指计算机可以执行的代码")])]),t._v(" "),v("ol",[v("li",[t._v("编译型: 源代码编译成机器指令, 再交给计算机执行 (二进制)")])]),t._v(" "),v("ul",[v("li",[t._v("C/C++, Java")])]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("解释型(脚本型): 源代码一边翻译成中间代码，再由解释器一边对中间代码进行解释执行")])]),t._v(" "),v("ul",[v("li",[t._v("Python, Javascript, PHP等")])]),t._v(" "),v("h2",{attrs:{id:"弱类型-强类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#弱类型-强类型"}},[t._v("#")]),t._v(" 弱类型, 强类型")]),t._v(" "),v("p",[t._v("程序是运行期间, 确定变量类型的编程语言就是弱类型语言 "),v("br"),t._v("\n在编译阶段确定类型的就是强类型语言")]),t._v(" "),v("h2",{attrs:{id:"动态类型-静态类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#动态类型-静态类型"}},[t._v("#")]),t._v(" 动态类型, 静态类型")]),t._v(" "),v("p",[t._v("动态类型语言: 指数据类型在运行时进行检查的 "),v("br"),t._v("\n静态类型语言: 指数据类型在运行之前(如编译时)检查的")])])}),[],!1,null,null,null);a.default=r.exports}}]);